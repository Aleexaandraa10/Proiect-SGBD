-- Ex 8 
---------------------------------------------------------------------------------------------------

-- CERINTA: 
-- Sa se determine numarul total de filme difuzate de o companie de cinematografe introdusa de 
-- catre un utilizator care 
-- are o singura locatie. Dintre aceste filme, sa se calculeze procentul filmelor care au fost lansate 
-- dupa un anumit an.

-----------------------------------------------------------------------------------------------------
-- Tabele utilizate: filme, cinematograf, difuzeaza


CREATE TABLE istoric_erori(
   id_eroare number generated by default as identity primary key, 
   exercitiu varchar2(100),
   mesaj_eroare varchar2(4000),
   data_eroare varchar2(100)
);

create or replace
    procedure inserare_date_tabel( ex in istoric_erori.exercitiu%type,
                                   mesaj in istoric_erori.mesaj_eroare%type)
is
    v_id istoric_erori.id_eroare%type;
    v_ex istoric_erori.exercitiu%type;
    v_msg istoric_erori.mesaj_eroare%type;
    v_data istoric_erori.data_eroare%type;
begin
    
    INSERT INTO  istoric_erori (exercitiu, mesaj_eroare, data_eroare)
        VALUES (ex, mesaj, to_char(sysdate, 'dd-mon-yyyy hh24:mi'))
    RETURNING id_eroare into v_id;

    -- preluam ultima linie bazata pe id-ul inserat
    select exercitiu, mesaj_eroare, data_eroare
    into v_ex, v_msg, v_data
    from istoric_erori
    where id_eroare = v_id;

    -- afisam eroarea inserata
    dbms_output.put_line('----------------------');
    dbms_output.put_line('Ultima eroare inserata');
    dbms_output.put_line('----------------------');
    dbms_output.put_line('Exercitiu: ' || v_ex);
    dbms_output.put_line('Mesaj eroare: ' || v_msg);
    dbms_output.put_line('Data eroare: ' || v_data);

end inserare_date_tabel;
/

                
                
create or replace function 
    ex8( nume in cinematograf.nume_companie%type, 
         an in film.an_aparitie%type,
         total_filme out number) 
            return number --se va returna procentul din enunt
is
    v_cod cinematograf.cod_cinematograf%type;
    mesaj_specific varchar2(4000);
    total_filme_dupa_anul_dat number := 0;
    NU_EXISTA_FILME EXCEPTION;
    AN_INVALID1 EXCEPTION;
    AN_INVALID2 EXCEPTION;
begin
    --tratarea exceptiilor NO_DATA_FOUND si TOO_MANY_ROWS cu ajutorul variabilei v_cod
    select cod_cinematograf into v_cod 
    from cinematograf
    where nume_companie = nume;
    
    if an > extract(year from sysdate) then
        RAISE AN_INVALID1;
    end if;
    
    if an<1000 or an>9999 then
        RAISE AN_INVALID2;
    end if;
    
    -- UTILIZAREA A 3 TABELE INTR-O SINGURA COMANDA SQL
    -- determinare numar total filme
    select count(d.cod_film) into total_filme
    from film f
        join difuzeaza d on f.cod_film = d.cod_film
        join cinematograf c on d.cod_cinematograf = c.cod_cinematograf
    where c.cod_cinematograf = v_cod;
    
    -- determinarea numarului de filme care au aparut dupa un anumit an
    select count(f.cod_film) into total_filme_dupa_anul_dat
    from film f
        join difuzeaza d on f.cod_film = d.cod_film
        join cinematograf c on d.cod_cinematograf = c.cod_cinematograf
    where c.cod_cinematograf = v_cod and f.an_aparitie >= an;
    
    
    if total_filme_dupa_anul_dat = 0 then
        RAISE NU_EXISTA_FILME;
    end if;
    return round(total_filme_dupa_anul_dat*100/total_filme,2);
    
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            mesaj_specific := 'Nu s-a gasit in baza de date o companie cu numele ' || nume;
            inserare_date_tabel('ex8', mesaj_specific);
            return -1;
        WHEN TOO_MANY_ROWS THEN
            mesaj_specific := 'Exista in baza de date mai multe companii cu numele ' || nume;
            inserare_date_tabel('ex8', mesaj_specific);
            return -1;
        WHEN NU_EXISTA_FILME THEN
            mesaj_specific := 'Nu exista in baza de date filme care au aparut dupa anul ' || an;
            inserare_date_tabel('ex8', mesaj_specific);
            return 0;
        WHEN AN_INVALID1 THEN
            mesaj_specific := 'Anul introdus nu trebuie sa fie mai mare decat anul curent.';
            inserare_date_tabel('ex8', mesaj_specific);
            return -1;
        WHEN AN_INVALID2 THEN
            mesaj_specific := 'Anul introdus trebuie sa aiba 4 cifre.';
            inserare_date_tabel('ex8', mesaj_specific);
            return -1;
        WHEN OTHERS THEN 
            mesaj_specific := 'A aparut alta eroare: ' || SQLERRM;
            inserare_date_tabel('ex8', mesaj_specific);
            return -1;
end ex8;
/


-- FUNCTIONEAZA CORECT FARA EXCEPTII
-- prima varianta
DECLARE
    total_filme NUMBER;
    procent NUMBER; 
    an number := 2004;
BEGIN 
    procent := ex8('BV Cinemas', an, total_filme);
    
    DBMS_OUTPUT.PUT_LINE('Numar total de filme: ' || total_filme);
    DBMS_OUTPUT.PUT_LINE('Procentul filmelor care au aparut dupa anul '||an||' din total este: ' || procent || '%.');
END;
/

-- a doua varianta
VARIABLE procent NUMBER 
VARIABLE total_filme NUMBER 
EXECUTE :procent := ex8('GJ Cinemas', 2004, :total_filme)
PRINT procent
PRINT total_filme

select ex8 from dual;

-- NO_DATA_FOUND
DECLARE
    total_filme NUMBER;
    procent NUMBER; 
    an number := 2004;
BEGIN 
    procent := ex8(' Cinemas', an, total_filme);
END;
/

-- TOO_MANY_ROWS
DECLARE
    total_filme NUMBER;
    procent NUMBER; 
    an number := 2004;
BEGIN 
    procent := ex8('IS Cinemas', an, total_filme);
END;
/

-- NU_EXISTA_FILME
DECLARE
    total_filme NUMBER;
    procent NUMBER; 
    an number := 2020;
BEGIN 
    procent := ex8('BV Cinemas', an, total_filme);
    DBMS_OUTPUT.PUT_LINE('Numar total de filme: ' || total_filme);
    DBMS_OUTPUT.PUT_LINE('Procentul filmelor care au aparut dupa anul '||an||' din total este: ' || procent || '%.');
END;
/

-- AN_INVALID1
DECLARE
    total_filme NUMBER;
    procent NUMBER; 
    an number := 2026;
BEGIN 
    procent := ex8('BV Cinemas', an, total_filme);
END;
/

-- AN_INVALID2
DECLARE
    total_filme NUMBER;
    procent NUMBER; 
    an number := 200;
BEGIN 
    procent := ex8('BV Cinemas', an, total_filme);
END;
/

-- VALUE_ERROR 
BEGIN
    DECLARE
        total_filme NUMBER;
        procent NUMBER; 
        an number := 'doua mii douazeci';
    BEGIN
        procent := ex8('BV Cinemas', an, total_filme);
    END;
EXCEPTION
    WHEN VALUE_ERROR THEN
        inserare_date_tabel('ex8', 'Anul introdus nu este valid, acesta trebuie sa fie de tipul numeric.');
END;
/


select *
from istoric_erori;




